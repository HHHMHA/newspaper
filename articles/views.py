from braces.views import UserFormKwargsMixinfrom django.contrib.auth.mixins import LoginRequiredMixin# Create your views here.from django.urls import reverse_lazyfrom django.views.generic import ListView, DetailViewfrom django.views.generic.edit import UpdateView, DeleteView, CreateViewfrom .forms import ArticleCreationForm, CommentCreationForm, ArticleVoteFormfrom .mixins import UserIsArticleAuthorMixinfrom .models import Articleclass ArticleListView(ListView):    model = Article    context_object_name = 'articles'    template_name = 'article_list.html'class ArticleDetailView(DetailView):    model = Article    context_object_name = 'article'    template_name = 'article_detail.html'    def get_context_data(self, **kwargs):        # Call the base implementation first to get a context        context = super().get_context_data(**kwargs)        # Add a check if the user liked the current article        context['user_liked_article'] = self.get_object().is_liked_by(user=self.request.user)        return contextclass ArticleUpdateView(LoginRequiredMixin, UserIsArticleAuthorMixin, UpdateView):    model = Article    fields = ('title', 'body',)    template_name = 'article_edit.html'    login_url = 'login'class ArticleDeleteView(LoginRequiredMixin, UserIsArticleAuthorMixin, DeleteView):    model = Article    success_url = reverse_lazy('article_list')    template_name = 'article_delete.html'    login_url = 'login'class ArticleCreateView(LoginRequiredMixin, UserFormKwargsMixin, CreateView):    template_name = 'article_create.html'    form_class = ArticleCreationForm    login_url = 'login'class CommentCreateView(LoginRequiredMixin, UserFormKwargsMixin, CreateView):    template_name = 'comment_create.html'    form_class = CommentCreationForm    login_url = 'login'class ArticleVoteView(LoginRequiredMixin, UserFormKwargsMixin, UpdateView):    model = Article    form_class = ArticleVoteForm    login_url = 'login'